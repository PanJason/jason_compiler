Terminals unused in grammar

    THEN
    ASSIGN
    ERROR


State 175 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: CompUnit

    2 CompUnit: Decl
    3         | FuncDef
    4         | CompUnit Decl
    5         | CompUnit FuncDef

    6 Decl: ConstDecl
    7     | VarDecl

    8 ConstDecl: CONST INT ConstDefList SEMI

    9 ConstDefList: ConstDef
   10             | ConstDefList COMMA ConstDef

   11 ConstDef: IDENT EQ ConstInitVal
   12         | IDENT Dimension EQ ConstInitVal

   13 Dimension: MLPAREN Exp MRPAREN
   14          | Dimension MLPAREN Exp MRPAREN

   15 ConstInitVal: Exp
   16             | ConstInitValArray

   17 ConstInitValArray: EMPTY
   18                  | LLPAREN ConstInitValList LRPAREN

   19 EMPTY: LLPAREN LRPAREN

   20 ConstInitValList: ConstInitVal
   21                 | ConstInitValList COMMA ConstInitVal

   22 VarDecl: INT VarDefList SEMI

   23 VarDefList: VarDef
   24           | VarDefList COMMA VarDef

   25 VarDef: IDENT
   26       | IDENT EQ InitVal
   27       | IDENT Dimension
   28       | IDENT Dimension EQ InitVal

   29 InitVal: Exp
   30        | InitValArray

   31 InitValArray: EMPTY
   32             | LLPAREN InitValList LRPAREN

   33 InitValList: InitVal
   34            | InitValList COMMA InitVal

   35 FuncDef: VOID IDENT SLPAREN SRPAREN Block
   36        | VOID IDENT SLPAREN FuncFParams SRPAREN Block
   37        | INT IDENT SLPAREN SRPAREN Block
   38        | INT IDENT SLPAREN FuncFParams SRPAREN Block

   39 FuncFParams: FuncFParam
   40            | FuncFParams COMMA FuncFParam

   41 FuncFParam: FuncFParamVar
   42           | FuncFParamArray

   43 FuncFParamVar: INT IDENT

   44 FuncFParamArray: INT IDENT MLPAREN MRPAREN
   45                | INT IDENT MLPAREN MRPAREN Dimension

   46 Block: EMPTY
   47      | LLPAREN BlockItems LRPAREN

   48 BlockItems: BlockItem
   49           | BlockItems BlockItem

   50 BlockItem: Decl
   51          | Stmt

   52 Stmt: Block
   53     | Assign_stmt
   54     | Exp_stmt
   55     | If_stmt
   56     | While_stmt
   57     | Cond_stmt
   58     | Return_stmt

   59 Assign_stmt: LVal EQ Exp SEMI

   60 Exp_stmt: SEMI
   61         | Exp SEMI

   62 If_stmt: IF SLPAREN Cond SRPAREN Stmt
   63        | IF SLPAREN Cond SRPAREN Stmt ELSE Stmt

   64 While_stmt: WHILE SLPAREN Cond SRPAREN Stmt

   65 Cond_stmt: BREAK SEMI
   66          | CONTINUE SEMI

   67 Return_stmt: RETURN SEMI
   68            | RETURN Exp SEMI

   69 Exp: AddExp

   70 Cond: LOrExp

   71 LVal: IDENT
   72     | IDENT Dimension

   73 PrimaryExp: SLPAREN Exp SRPAREN
   74           | LVal
   75           | DEC_NUM
   76           | OCT_NUM
   77           | HEX_NUM

   78 UnaryExp: PrimaryExp
   79         | FuncCallExp
   80         | PLUS UnaryExp
   81         | MINUS UnaryExp
   82         | NOT UnaryExp

   83 FuncCallExp: IDENT SLPAREN SRPAREN
   84            | IDENT SLPAREN FuncRParams SRPAREN

   85 FuncRParams: Exp
   86            | FuncRParams COMMA Exp

   87 MulExp: UnaryExp
   88       | MulExp TIMES UnaryExp
   89       | MulExp OVER UnaryExp
   90       | MulExp MOD UnaryExp

   91 AddExp: MulExp
   92       | AddExp PLUS MulExp
   93       | AddExp MINUS MulExp

   94 RelExp: AddExp
   95       | RelExp LT AddExp
   96       | RelExp GT AddExp
   97       | RelExp LTE AddExp
   98       | RelExp GTE AddExp

   99 EqExp: RelExp
  100      | EqExp EQ RelExp
  101      | EqExp NEQ RelExp

  102 LAndExp: EqExp
  103        | LAndExp AND EqExp

  104 LOrExp: LAndExp
  105       | LOrExp OR LAndExp

  106 IDENT: ID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 62 63
    THEN (259)
    ELSE (260) 63
    WHILE (261) 64
    BREAK (262) 65
    CONTINUE (263) 66
    RETURN (264) 67 68
    CONST (265) 8
    INT (266) 8 22 37 38 43 44 45
    VOID (267) 35 36
    ID (268) 106
    DEC_NUM (269) 75
    OCT_NUM (270) 76
    HEX_NUM (271) 77
    ASSIGN (272)
    SEMI (273) 8 22 59 60 61 65 66 67 68
    COMMA (274) 10 21 24 34 40 86
    LLPAREN (275) 18 19 32 47
    LRPAREN (276) 18 19 32 47
    MLPAREN (277) 13 14 44 45
    MRPAREN (278) 13 14 44 45
    SLPAREN (279) 35 36 37 38 62 63 64 73 83 84
    SRPAREN (280) 35 36 37 38 62 63 64 73 83 84
    NOT (281) 82
    EQ (282) 11 12 26 28 59 100
    NEQ (283) 101
    LT (284) 95
    GT (285) 96
    LTE (286) 97
    GTE (287) 98
    PLUS (288) 80 92
    MINUS (289) 81 93
    TIMES (290) 88
    OVER (291) 89
    MOD (292) 90
    AND (293) 103
    OR (294) 105
    ERROR (295)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    program (42)
        on left: 1
        on right: 0
    CompUnit (43)
        on left: 2 3 4 5
        on right: 1 4 5
    Decl (44)
        on left: 6 7
        on right: 2 4 50
    ConstDecl (45)
        on left: 8
        on right: 6
    ConstDefList (46)
        on left: 9 10
        on right: 8 10
    ConstDef (47)
        on left: 11 12
        on right: 9 10
    Dimension (48)
        on left: 13 14
        on right: 12 14 27 28 45 72
    ConstInitVal (49)
        on left: 15 16
        on right: 11 12 20 21
    ConstInitValArray (50)
        on left: 17 18
        on right: 16
    EMPTY (51)
        on left: 19
        on right: 17 31 46
    ConstInitValList (52)
        on left: 20 21
        on right: 18 21
    VarDecl (53)
        on left: 22
        on right: 7
    VarDefList (54)
        on left: 23 24
        on right: 22 24
    VarDef (55)
        on left: 25 26 27 28
        on right: 23 24
    InitVal (56)
        on left: 29 30
        on right: 26 28 33 34
    InitValArray (57)
        on left: 31 32
        on right: 30
    InitValList (58)
        on left: 33 34
        on right: 32 34
    FuncDef (59)
        on left: 35 36 37 38
        on right: 3 5
    FuncFParams (60)
        on left: 39 40
        on right: 36 38 40
    FuncFParam (61)
        on left: 41 42
        on right: 39 40
    FuncFParamVar (62)
        on left: 43
        on right: 41
    FuncFParamArray (63)
        on left: 44 45
        on right: 42
    Block (64)
        on left: 46 47
        on right: 35 36 37 38 52
    BlockItems (65)
        on left: 48 49
        on right: 47 49
    BlockItem (66)
        on left: 50 51
        on right: 48 49
    Stmt (67)
        on left: 52 53 54 55 56 57 58
        on right: 51 62 63 64
    Assign_stmt (68)
        on left: 59
        on right: 53
    Exp_stmt (69)
        on left: 60 61
        on right: 54
    If_stmt (70)
        on left: 62 63
        on right: 55
    While_stmt (71)
        on left: 64
        on right: 56
    Cond_stmt (72)
        on left: 65 66
        on right: 57
    Return_stmt (73)
        on left: 67 68
        on right: 58
    Exp (74)
        on left: 69
        on right: 13 14 15 29 59 61 68 73 85 86
    Cond (75)
        on left: 70
        on right: 62 63 64
    LVal (76)
        on left: 71 72
        on right: 59 74
    PrimaryExp (77)
        on left: 73 74 75 76 77
        on right: 78
    UnaryExp (78)
        on left: 78 79 80 81 82
        on right: 80 81 82 87 88 89 90
    FuncCallExp (79)
        on left: 83 84
        on right: 79
    FuncRParams (80)
        on left: 85 86
        on right: 84 86
    MulExp (81)
        on left: 87 88 89 90
        on right: 88 89 90 91 92 93
    AddExp (82)
        on left: 91 92 93
        on right: 69 92 93 94 95 96 97 98
    RelExp (83)
        on left: 94 95 96 97 98
        on right: 95 96 97 98 99 100 101
    EqExp (84)
        on left: 99 100 101
        on right: 100 101 102 103
    LAndExp (85)
        on left: 102 103
        on right: 103 104 105
    LOrExp (86)
        on left: 104 105
        on right: 70 105
    IDENT (87)
        on left: 106
        on right: 11 12 25 26 27 28 35 36 37 38 43 44 45 71 72 83 84


State 0

    0 $accept: . program $end

    CONST  shift, and go to state 1
    INT    shift, and go to state 2
    VOID   shift, and go to state 3

    program    go to state 4
    CompUnit   go to state 5
    Decl       go to state 6
    ConstDecl  go to state 7
    VarDecl    go to state 8
    FuncDef    go to state 9


State 1

    8 ConstDecl: CONST . INT ConstDefList SEMI

    INT  shift, and go to state 10


State 2

   22 VarDecl: INT . VarDefList SEMI
   37 FuncDef: INT . IDENT SLPAREN SRPAREN Block
   38        | INT . IDENT SLPAREN FuncFParams SRPAREN Block

    ID  shift, and go to state 11

    VarDefList  go to state 12
    VarDef      go to state 13
    IDENT       go to state 14


State 3

   35 FuncDef: VOID . IDENT SLPAREN SRPAREN Block
   36        | VOID . IDENT SLPAREN FuncFParams SRPAREN Block

    ID  shift, and go to state 11

    IDENT  go to state 15


State 4

    0 $accept: program . $end

    $end  shift, and go to state 16


State 5

    1 program: CompUnit .
    4 CompUnit: CompUnit . Decl
    5         | CompUnit . FuncDef

    CONST  shift, and go to state 1
    INT    shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (program)

    Decl       go to state 17
    ConstDecl  go to state 7
    VarDecl    go to state 8
    FuncDef    go to state 18


State 6

    2 CompUnit: Decl .

    $default  reduce using rule 2 (CompUnit)


State 7

    6 Decl: ConstDecl .

    $default  reduce using rule 6 (Decl)


State 8

    7 Decl: VarDecl .

    $default  reduce using rule 7 (Decl)


State 9

    3 CompUnit: FuncDef .

    $default  reduce using rule 3 (CompUnit)


State 10

    8 ConstDecl: CONST INT . ConstDefList SEMI

    ID  shift, and go to state 11

    ConstDefList  go to state 19
    ConstDef      go to state 20
    IDENT         go to state 21


State 11

  106 IDENT: ID .

    $default  reduce using rule 106 (IDENT)


State 12

   22 VarDecl: INT VarDefList . SEMI
   24 VarDefList: VarDefList . COMMA VarDef

    SEMI   shift, and go to state 22
    COMMA  shift, and go to state 23


State 13

   23 VarDefList: VarDef .

    $default  reduce using rule 23 (VarDefList)


State 14

   25 VarDef: IDENT .
   26       | IDENT . EQ InitVal
   27       | IDENT . Dimension
   28       | IDENT . Dimension EQ InitVal
   37 FuncDef: INT IDENT . SLPAREN SRPAREN Block
   38        | INT IDENT . SLPAREN FuncFParams SRPAREN Block

    MLPAREN  shift, and go to state 24
    SLPAREN  shift, and go to state 25
    EQ       shift, and go to state 26

    $default  reduce using rule 25 (VarDef)

    Dimension  go to state 27


State 15

   35 FuncDef: VOID IDENT . SLPAREN SRPAREN Block
   36        | VOID IDENT . SLPAREN FuncFParams SRPAREN Block

    SLPAREN  shift, and go to state 28


State 16

    0 $accept: program $end .

    $default  accept


State 17

    4 CompUnit: CompUnit Decl .

    $default  reduce using rule 4 (CompUnit)


State 18

    5 CompUnit: CompUnit FuncDef .

    $default  reduce using rule 5 (CompUnit)


State 19

    8 ConstDecl: CONST INT ConstDefList . SEMI
   10 ConstDefList: ConstDefList . COMMA ConstDef

    SEMI   shift, and go to state 29
    COMMA  shift, and go to state 30


State 20

    9 ConstDefList: ConstDef .

    $default  reduce using rule 9 (ConstDefList)


State 21

   11 ConstDef: IDENT . EQ ConstInitVal
   12         | IDENT . Dimension EQ ConstInitVal

    MLPAREN  shift, and go to state 24
    EQ       shift, and go to state 31

    Dimension  go to state 32


State 22

   22 VarDecl: INT VarDefList SEMI .

    $default  reduce using rule 22 (VarDecl)


State 23

   24 VarDefList: VarDefList COMMA . VarDef

    ID  shift, and go to state 11

    VarDef  go to state 33
    IDENT   go to state 34


State 24

   13 Dimension: MLPAREN . Exp MRPAREN

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    Exp          go to state 42
    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 47
    AddExp       go to state 48
    IDENT        go to state 49


State 25

   37 FuncDef: INT IDENT SLPAREN . SRPAREN Block
   38        | INT IDENT SLPAREN . FuncFParams SRPAREN Block

    INT      shift, and go to state 50
    SRPAREN  shift, and go to state 51

    FuncFParams      go to state 52
    FuncFParam       go to state 53
    FuncFParamVar    go to state 54
    FuncFParamArray  go to state 55


State 26

   26 VarDef: IDENT EQ . InitVal

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    LLPAREN  shift, and go to state 56
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    EMPTY         go to state 57
    InitVal       go to state 58
    InitValArray  go to state 59
    Exp           go to state 60
    LVal          go to state 43
    PrimaryExp    go to state 44
    UnaryExp      go to state 45
    FuncCallExp   go to state 46
    MulExp        go to state 47
    AddExp        go to state 48
    IDENT         go to state 49


State 27

   14 Dimension: Dimension . MLPAREN Exp MRPAREN
   27 VarDef: IDENT Dimension .
   28       | IDENT Dimension . EQ InitVal

    MLPAREN  shift, and go to state 61
    EQ       shift, and go to state 62

    $default  reduce using rule 27 (VarDef)


State 28

   35 FuncDef: VOID IDENT SLPAREN . SRPAREN Block
   36        | VOID IDENT SLPAREN . FuncFParams SRPAREN Block

    INT      shift, and go to state 50
    SRPAREN  shift, and go to state 63

    FuncFParams      go to state 64
    FuncFParam       go to state 53
    FuncFParamVar    go to state 54
    FuncFParamArray  go to state 55


State 29

    8 ConstDecl: CONST INT ConstDefList SEMI .

    $default  reduce using rule 8 (ConstDecl)


State 30

   10 ConstDefList: ConstDefList COMMA . ConstDef

    ID  shift, and go to state 11

    ConstDef  go to state 65
    IDENT     go to state 21


State 31

   11 ConstDef: IDENT EQ . ConstInitVal

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    LLPAREN  shift, and go to state 66
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    ConstInitVal       go to state 67
    ConstInitValArray  go to state 68
    EMPTY              go to state 69
    Exp                go to state 70
    LVal               go to state 43
    PrimaryExp         go to state 44
    UnaryExp           go to state 45
    FuncCallExp        go to state 46
    MulExp             go to state 47
    AddExp             go to state 48
    IDENT              go to state 49


State 32

   12 ConstDef: IDENT Dimension . EQ ConstInitVal
   14 Dimension: Dimension . MLPAREN Exp MRPAREN

    MLPAREN  shift, and go to state 61
    EQ       shift, and go to state 71


State 33

   24 VarDefList: VarDefList COMMA VarDef .

    $default  reduce using rule 24 (VarDefList)


State 34

   25 VarDef: IDENT .
   26       | IDENT . EQ InitVal
   27       | IDENT . Dimension
   28       | IDENT . Dimension EQ InitVal

    MLPAREN  shift, and go to state 24
    EQ       shift, and go to state 26

    $default  reduce using rule 25 (VarDef)

    Dimension  go to state 27


State 35

   75 PrimaryExp: DEC_NUM .

    $default  reduce using rule 75 (PrimaryExp)


State 36

   76 PrimaryExp: OCT_NUM .

    $default  reduce using rule 76 (PrimaryExp)


State 37

   77 PrimaryExp: HEX_NUM .

    $default  reduce using rule 77 (PrimaryExp)


State 38

   73 PrimaryExp: SLPAREN . Exp SRPAREN

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    Exp          go to state 72
    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 47
    AddExp       go to state 48
    IDENT        go to state 49


State 39

   82 UnaryExp: NOT . UnaryExp

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 73
    FuncCallExp  go to state 46
    IDENT        go to state 49


State 40

   80 UnaryExp: PLUS . UnaryExp

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 74
    FuncCallExp  go to state 46
    IDENT        go to state 49


State 41

   81 UnaryExp: MINUS . UnaryExp

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 75
    FuncCallExp  go to state 46
    IDENT        go to state 49


State 42

   13 Dimension: MLPAREN Exp . MRPAREN

    MRPAREN  shift, and go to state 76


State 43

   74 PrimaryExp: LVal .

    $default  reduce using rule 74 (PrimaryExp)


State 44

   78 UnaryExp: PrimaryExp .

    $default  reduce using rule 78 (UnaryExp)


State 45

   87 MulExp: UnaryExp .

    $default  reduce using rule 87 (MulExp)


State 46

   79 UnaryExp: FuncCallExp .

    $default  reduce using rule 79 (UnaryExp)


State 47

   88 MulExp: MulExp . TIMES UnaryExp
   89       | MulExp . OVER UnaryExp
   90       | MulExp . MOD UnaryExp
   91 AddExp: MulExp .

    TIMES  shift, and go to state 77
    OVER   shift, and go to state 78
    MOD    shift, and go to state 79

    $default  reduce using rule 91 (AddExp)


State 48

   69 Exp: AddExp .
   92 AddExp: AddExp . PLUS MulExp
   93       | AddExp . MINUS MulExp

    PLUS   shift, and go to state 80
    MINUS  shift, and go to state 81

    $default  reduce using rule 69 (Exp)


State 49

   71 LVal: IDENT .
   72     | IDENT . Dimension
   83 FuncCallExp: IDENT . SLPAREN SRPAREN
   84            | IDENT . SLPAREN FuncRParams SRPAREN

    MLPAREN  shift, and go to state 24
    SLPAREN  shift, and go to state 82

    $default  reduce using rule 71 (LVal)

    Dimension  go to state 83


State 50

   43 FuncFParamVar: INT . IDENT
   44 FuncFParamArray: INT . IDENT MLPAREN MRPAREN
   45                | INT . IDENT MLPAREN MRPAREN Dimension

    ID  shift, and go to state 11

    IDENT  go to state 84


State 51

   37 FuncDef: INT IDENT SLPAREN SRPAREN . Block

    LLPAREN  shift, and go to state 85

    EMPTY  go to state 86
    Block  go to state 87


State 52

   38 FuncDef: INT IDENT SLPAREN FuncFParams . SRPAREN Block
   40 FuncFParams: FuncFParams . COMMA FuncFParam

    COMMA    shift, and go to state 88
    SRPAREN  shift, and go to state 89


State 53

   39 FuncFParams: FuncFParam .

    $default  reduce using rule 39 (FuncFParams)


State 54

   41 FuncFParam: FuncFParamVar .

    $default  reduce using rule 41 (FuncFParam)


State 55

   42 FuncFParam: FuncFParamArray .

    $default  reduce using rule 42 (FuncFParam)


State 56

   19 EMPTY: LLPAREN . LRPAREN
   32 InitValArray: LLPAREN . InitValList LRPAREN

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    LLPAREN  shift, and go to state 56
    LRPAREN  shift, and go to state 90
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    EMPTY         go to state 57
    InitVal       go to state 91
    InitValArray  go to state 59
    InitValList   go to state 92
    Exp           go to state 60
    LVal          go to state 43
    PrimaryExp    go to state 44
    UnaryExp      go to state 45
    FuncCallExp   go to state 46
    MulExp        go to state 47
    AddExp        go to state 48
    IDENT         go to state 49


State 57

   31 InitValArray: EMPTY .

    $default  reduce using rule 31 (InitValArray)


State 58

   26 VarDef: IDENT EQ InitVal .

    $default  reduce using rule 26 (VarDef)


State 59

   30 InitVal: InitValArray .

    $default  reduce using rule 30 (InitVal)


State 60

   29 InitVal: Exp .

    $default  reduce using rule 29 (InitVal)


State 61

   14 Dimension: Dimension MLPAREN . Exp MRPAREN

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    Exp          go to state 93
    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 47
    AddExp       go to state 48
    IDENT        go to state 49


State 62

   28 VarDef: IDENT Dimension EQ . InitVal

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    LLPAREN  shift, and go to state 56
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    EMPTY         go to state 57
    InitVal       go to state 94
    InitValArray  go to state 59
    Exp           go to state 60
    LVal          go to state 43
    PrimaryExp    go to state 44
    UnaryExp      go to state 45
    FuncCallExp   go to state 46
    MulExp        go to state 47
    AddExp        go to state 48
    IDENT         go to state 49


State 63

   35 FuncDef: VOID IDENT SLPAREN SRPAREN . Block

    LLPAREN  shift, and go to state 85

    EMPTY  go to state 86
    Block  go to state 95


State 64

   36 FuncDef: VOID IDENT SLPAREN FuncFParams . SRPAREN Block
   40 FuncFParams: FuncFParams . COMMA FuncFParam

    COMMA    shift, and go to state 88
    SRPAREN  shift, and go to state 96


State 65

   10 ConstDefList: ConstDefList COMMA ConstDef .

    $default  reduce using rule 10 (ConstDefList)


State 66

   18 ConstInitValArray: LLPAREN . ConstInitValList LRPAREN
   19 EMPTY: LLPAREN . LRPAREN

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    LLPAREN  shift, and go to state 66
    LRPAREN  shift, and go to state 90
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    ConstInitVal       go to state 97
    ConstInitValArray  go to state 68
    EMPTY              go to state 69
    ConstInitValList   go to state 98
    Exp                go to state 70
    LVal               go to state 43
    PrimaryExp         go to state 44
    UnaryExp           go to state 45
    FuncCallExp        go to state 46
    MulExp             go to state 47
    AddExp             go to state 48
    IDENT              go to state 49


State 67

   11 ConstDef: IDENT EQ ConstInitVal .

    $default  reduce using rule 11 (ConstDef)


State 68

   16 ConstInitVal: ConstInitValArray .

    $default  reduce using rule 16 (ConstInitVal)


State 69

   17 ConstInitValArray: EMPTY .

    $default  reduce using rule 17 (ConstInitValArray)


State 70

   15 ConstInitVal: Exp .

    $default  reduce using rule 15 (ConstInitVal)


State 71

   12 ConstDef: IDENT Dimension EQ . ConstInitVal

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    LLPAREN  shift, and go to state 66
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    ConstInitVal       go to state 99
    ConstInitValArray  go to state 68
    EMPTY              go to state 69
    Exp                go to state 70
    LVal               go to state 43
    PrimaryExp         go to state 44
    UnaryExp           go to state 45
    FuncCallExp        go to state 46
    MulExp             go to state 47
    AddExp             go to state 48
    IDENT              go to state 49


State 72

   73 PrimaryExp: SLPAREN Exp . SRPAREN

    SRPAREN  shift, and go to state 100


State 73

   82 UnaryExp: NOT UnaryExp .

    $default  reduce using rule 82 (UnaryExp)


State 74

   80 UnaryExp: PLUS UnaryExp .

    $default  reduce using rule 80 (UnaryExp)


State 75

   81 UnaryExp: MINUS UnaryExp .

    $default  reduce using rule 81 (UnaryExp)


State 76

   13 Dimension: MLPAREN Exp MRPAREN .

    $default  reduce using rule 13 (Dimension)


State 77

   88 MulExp: MulExp TIMES . UnaryExp

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 101
    FuncCallExp  go to state 46
    IDENT        go to state 49


State 78

   89 MulExp: MulExp OVER . UnaryExp

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 102
    FuncCallExp  go to state 46
    IDENT        go to state 49


State 79

   90 MulExp: MulExp MOD . UnaryExp

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 103
    FuncCallExp  go to state 46
    IDENT        go to state 49


State 80

   92 AddExp: AddExp PLUS . MulExp

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 104
    IDENT        go to state 49


State 81

   93 AddExp: AddExp MINUS . MulExp

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 105
    IDENT        go to state 49


State 82

   83 FuncCallExp: IDENT SLPAREN . SRPAREN
   84            | IDENT SLPAREN . FuncRParams SRPAREN

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    SRPAREN  shift, and go to state 106
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    Exp          go to state 107
    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    FuncRParams  go to state 108
    MulExp       go to state 47
    AddExp       go to state 48
    IDENT        go to state 49


State 83

   14 Dimension: Dimension . MLPAREN Exp MRPAREN
   72 LVal: IDENT Dimension .

    MLPAREN  shift, and go to state 61

    $default  reduce using rule 72 (LVal)


State 84

   43 FuncFParamVar: INT IDENT .
   44 FuncFParamArray: INT IDENT . MLPAREN MRPAREN
   45                | INT IDENT . MLPAREN MRPAREN Dimension

    MLPAREN  shift, and go to state 109

    $default  reduce using rule 43 (FuncFParamVar)


State 85

   19 EMPTY: LLPAREN . LRPAREN
   47 Block: LLPAREN . BlockItems LRPAREN

    IF        shift, and go to state 110
    WHILE     shift, and go to state 111
    BREAK     shift, and go to state 112
    CONTINUE  shift, and go to state 113
    RETURN    shift, and go to state 114
    CONST     shift, and go to state 1
    INT       shift, and go to state 115
    ID        shift, and go to state 11
    DEC_NUM   shift, and go to state 35
    OCT_NUM   shift, and go to state 36
    HEX_NUM   shift, and go to state 37
    SEMI      shift, and go to state 116
    LLPAREN   shift, and go to state 85
    LRPAREN   shift, and go to state 90
    SLPAREN   shift, and go to state 38
    NOT       shift, and go to state 39
    PLUS      shift, and go to state 40
    MINUS     shift, and go to state 41

    Decl         go to state 117
    ConstDecl    go to state 7
    EMPTY        go to state 86
    VarDecl      go to state 8
    Block        go to state 118
    BlockItems   go to state 119
    BlockItem    go to state 120
    Stmt         go to state 121
    Assign_stmt  go to state 122
    Exp_stmt     go to state 123
    If_stmt      go to state 124
    While_stmt   go to state 125
    Cond_stmt    go to state 126
    Return_stmt  go to state 127
    Exp          go to state 128
    LVal         go to state 129
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 47
    AddExp       go to state 48
    IDENT        go to state 49


State 86

   46 Block: EMPTY .

    $default  reduce using rule 46 (Block)


State 87

   37 FuncDef: INT IDENT SLPAREN SRPAREN Block .

    $default  reduce using rule 37 (FuncDef)


State 88

   40 FuncFParams: FuncFParams COMMA . FuncFParam

    INT  shift, and go to state 50

    FuncFParam       go to state 130
    FuncFParamVar    go to state 54
    FuncFParamArray  go to state 55


State 89

   38 FuncDef: INT IDENT SLPAREN FuncFParams SRPAREN . Block

    LLPAREN  shift, and go to state 85

    EMPTY  go to state 86
    Block  go to state 131


State 90

   19 EMPTY: LLPAREN LRPAREN .

    $default  reduce using rule 19 (EMPTY)


State 91

   33 InitValList: InitVal .

    $default  reduce using rule 33 (InitValList)


State 92

   32 InitValArray: LLPAREN InitValList . LRPAREN
   34 InitValList: InitValList . COMMA InitVal

    COMMA    shift, and go to state 132
    LRPAREN  shift, and go to state 133


State 93

   14 Dimension: Dimension MLPAREN Exp . MRPAREN

    MRPAREN  shift, and go to state 134


State 94

   28 VarDef: IDENT Dimension EQ InitVal .

    $default  reduce using rule 28 (VarDef)


State 95

   35 FuncDef: VOID IDENT SLPAREN SRPAREN Block .

    $default  reduce using rule 35 (FuncDef)


State 96

   36 FuncDef: VOID IDENT SLPAREN FuncFParams SRPAREN . Block

    LLPAREN  shift, and go to state 85

    EMPTY  go to state 86
    Block  go to state 135


State 97

   20 ConstInitValList: ConstInitVal .

    $default  reduce using rule 20 (ConstInitValList)


State 98

   18 ConstInitValArray: LLPAREN ConstInitValList . LRPAREN
   21 ConstInitValList: ConstInitValList . COMMA ConstInitVal

    COMMA    shift, and go to state 136
    LRPAREN  shift, and go to state 137


State 99

   12 ConstDef: IDENT Dimension EQ ConstInitVal .

    $default  reduce using rule 12 (ConstDef)


State 100

   73 PrimaryExp: SLPAREN Exp SRPAREN .

    $default  reduce using rule 73 (PrimaryExp)


State 101

   88 MulExp: MulExp TIMES UnaryExp .

    $default  reduce using rule 88 (MulExp)


State 102

   89 MulExp: MulExp OVER UnaryExp .

    $default  reduce using rule 89 (MulExp)


State 103

   90 MulExp: MulExp MOD UnaryExp .

    $default  reduce using rule 90 (MulExp)


State 104

   88 MulExp: MulExp . TIMES UnaryExp
   89       | MulExp . OVER UnaryExp
   90       | MulExp . MOD UnaryExp
   92 AddExp: AddExp PLUS MulExp .

    TIMES  shift, and go to state 77
    OVER   shift, and go to state 78
    MOD    shift, and go to state 79

    $default  reduce using rule 92 (AddExp)


State 105

   88 MulExp: MulExp . TIMES UnaryExp
   89       | MulExp . OVER UnaryExp
   90       | MulExp . MOD UnaryExp
   93 AddExp: AddExp MINUS MulExp .

    TIMES  shift, and go to state 77
    OVER   shift, and go to state 78
    MOD    shift, and go to state 79

    $default  reduce using rule 93 (AddExp)


State 106

   83 FuncCallExp: IDENT SLPAREN SRPAREN .

    $default  reduce using rule 83 (FuncCallExp)


State 107

   85 FuncRParams: Exp .

    $default  reduce using rule 85 (FuncRParams)


State 108

   84 FuncCallExp: IDENT SLPAREN FuncRParams . SRPAREN
   86 FuncRParams: FuncRParams . COMMA Exp

    COMMA    shift, and go to state 138
    SRPAREN  shift, and go to state 139


State 109

   44 FuncFParamArray: INT IDENT MLPAREN . MRPAREN
   45                | INT IDENT MLPAREN . MRPAREN Dimension

    MRPAREN  shift, and go to state 140


State 110

   62 If_stmt: IF . SLPAREN Cond SRPAREN Stmt
   63        | IF . SLPAREN Cond SRPAREN Stmt ELSE Stmt

    SLPAREN  shift, and go to state 141


State 111

   64 While_stmt: WHILE . SLPAREN Cond SRPAREN Stmt

    SLPAREN  shift, and go to state 142


State 112

   65 Cond_stmt: BREAK . SEMI

    SEMI  shift, and go to state 143


State 113

   66 Cond_stmt: CONTINUE . SEMI

    SEMI  shift, and go to state 144


State 114

   67 Return_stmt: RETURN . SEMI
   68            | RETURN . Exp SEMI

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SEMI     shift, and go to state 145
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    Exp          go to state 146
    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 47
    AddExp       go to state 48
    IDENT        go to state 49


State 115

   22 VarDecl: INT . VarDefList SEMI

    ID  shift, and go to state 11

    VarDefList  go to state 12
    VarDef      go to state 13
    IDENT       go to state 34


State 116

   60 Exp_stmt: SEMI .

    $default  reduce using rule 60 (Exp_stmt)


State 117

   50 BlockItem: Decl .

    $default  reduce using rule 50 (BlockItem)


State 118

   52 Stmt: Block .

    $default  reduce using rule 52 (Stmt)


State 119

   47 Block: LLPAREN BlockItems . LRPAREN
   49 BlockItems: BlockItems . BlockItem

    IF        shift, and go to state 110
    WHILE     shift, and go to state 111
    BREAK     shift, and go to state 112
    CONTINUE  shift, and go to state 113
    RETURN    shift, and go to state 114
    CONST     shift, and go to state 1
    INT       shift, and go to state 115
    ID        shift, and go to state 11
    DEC_NUM   shift, and go to state 35
    OCT_NUM   shift, and go to state 36
    HEX_NUM   shift, and go to state 37
    SEMI      shift, and go to state 116
    LLPAREN   shift, and go to state 85
    LRPAREN   shift, and go to state 147
    SLPAREN   shift, and go to state 38
    NOT       shift, and go to state 39
    PLUS      shift, and go to state 40
    MINUS     shift, and go to state 41

    Decl         go to state 117
    ConstDecl    go to state 7
    EMPTY        go to state 86
    VarDecl      go to state 8
    Block        go to state 118
    BlockItem    go to state 148
    Stmt         go to state 121
    Assign_stmt  go to state 122
    Exp_stmt     go to state 123
    If_stmt      go to state 124
    While_stmt   go to state 125
    Cond_stmt    go to state 126
    Return_stmt  go to state 127
    Exp          go to state 128
    LVal         go to state 129
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 47
    AddExp       go to state 48
    IDENT        go to state 49


State 120

   48 BlockItems: BlockItem .

    $default  reduce using rule 48 (BlockItems)


State 121

   51 BlockItem: Stmt .

    $default  reduce using rule 51 (BlockItem)


State 122

   53 Stmt: Assign_stmt .

    $default  reduce using rule 53 (Stmt)


State 123

   54 Stmt: Exp_stmt .

    $default  reduce using rule 54 (Stmt)


State 124

   55 Stmt: If_stmt .

    $default  reduce using rule 55 (Stmt)


State 125

   56 Stmt: While_stmt .

    $default  reduce using rule 56 (Stmt)


State 126

   57 Stmt: Cond_stmt .

    $default  reduce using rule 57 (Stmt)


State 127

   58 Stmt: Return_stmt .

    $default  reduce using rule 58 (Stmt)


State 128

   61 Exp_stmt: Exp . SEMI

    SEMI  shift, and go to state 149


State 129

   59 Assign_stmt: LVal . EQ Exp SEMI
   74 PrimaryExp: LVal .

    EQ  shift, and go to state 150

    $default  reduce using rule 74 (PrimaryExp)


State 130

   40 FuncFParams: FuncFParams COMMA FuncFParam .

    $default  reduce using rule 40 (FuncFParams)


State 131

   38 FuncDef: INT IDENT SLPAREN FuncFParams SRPAREN Block .

    $default  reduce using rule 38 (FuncDef)


State 132

   34 InitValList: InitValList COMMA . InitVal

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    LLPAREN  shift, and go to state 56
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    EMPTY         go to state 57
    InitVal       go to state 151
    InitValArray  go to state 59
    Exp           go to state 60
    LVal          go to state 43
    PrimaryExp    go to state 44
    UnaryExp      go to state 45
    FuncCallExp   go to state 46
    MulExp        go to state 47
    AddExp        go to state 48
    IDENT         go to state 49


State 133

   32 InitValArray: LLPAREN InitValList LRPAREN .

    $default  reduce using rule 32 (InitValArray)


State 134

   14 Dimension: Dimension MLPAREN Exp MRPAREN .

    $default  reduce using rule 14 (Dimension)


State 135

   36 FuncDef: VOID IDENT SLPAREN FuncFParams SRPAREN Block .

    $default  reduce using rule 36 (FuncDef)


State 136

   21 ConstInitValList: ConstInitValList COMMA . ConstInitVal

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    LLPAREN  shift, and go to state 66
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    ConstInitVal       go to state 152
    ConstInitValArray  go to state 68
    EMPTY              go to state 69
    Exp                go to state 70
    LVal               go to state 43
    PrimaryExp         go to state 44
    UnaryExp           go to state 45
    FuncCallExp        go to state 46
    MulExp             go to state 47
    AddExp             go to state 48
    IDENT              go to state 49


State 137

   18 ConstInitValArray: LLPAREN ConstInitValList LRPAREN .

    $default  reduce using rule 18 (ConstInitValArray)


State 138

   86 FuncRParams: FuncRParams COMMA . Exp

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    Exp          go to state 153
    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 47
    AddExp       go to state 48
    IDENT        go to state 49


State 139

   84 FuncCallExp: IDENT SLPAREN FuncRParams SRPAREN .

    $default  reduce using rule 84 (FuncCallExp)


State 140

   44 FuncFParamArray: INT IDENT MLPAREN MRPAREN .
   45                | INT IDENT MLPAREN MRPAREN . Dimension

    MLPAREN  shift, and go to state 24

    $default  reduce using rule 44 (FuncFParamArray)

    Dimension  go to state 154


State 141

   62 If_stmt: IF SLPAREN . Cond SRPAREN Stmt
   63        | IF SLPAREN . Cond SRPAREN Stmt ELSE Stmt

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    Cond         go to state 155
    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 47
    AddExp       go to state 156
    RelExp       go to state 157
    EqExp        go to state 158
    LAndExp      go to state 159
    LOrExp       go to state 160
    IDENT        go to state 49


State 142

   64 While_stmt: WHILE SLPAREN . Cond SRPAREN Stmt

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    Cond         go to state 161
    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 47
    AddExp       go to state 156
    RelExp       go to state 157
    EqExp        go to state 158
    LAndExp      go to state 159
    LOrExp       go to state 160
    IDENT        go to state 49


State 143

   65 Cond_stmt: BREAK SEMI .

    $default  reduce using rule 65 (Cond_stmt)


State 144

   66 Cond_stmt: CONTINUE SEMI .

    $default  reduce using rule 66 (Cond_stmt)


State 145

   67 Return_stmt: RETURN SEMI .

    $default  reduce using rule 67 (Return_stmt)


State 146

   68 Return_stmt: RETURN Exp . SEMI

    SEMI  shift, and go to state 162


State 147

   47 Block: LLPAREN BlockItems LRPAREN .

    $default  reduce using rule 47 (Block)


State 148

   49 BlockItems: BlockItems BlockItem .

    $default  reduce using rule 49 (BlockItems)


State 149

   61 Exp_stmt: Exp SEMI .

    $default  reduce using rule 61 (Exp_stmt)


State 150

   59 Assign_stmt: LVal EQ . Exp SEMI

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    Exp          go to state 163
    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 47
    AddExp       go to state 48
    IDENT        go to state 49


State 151

   34 InitValList: InitValList COMMA InitVal .

    $default  reduce using rule 34 (InitValList)


State 152

   21 ConstInitValList: ConstInitValList COMMA ConstInitVal .

    $default  reduce using rule 21 (ConstInitValList)


State 153

   86 FuncRParams: FuncRParams COMMA Exp .

    $default  reduce using rule 86 (FuncRParams)


State 154

   14 Dimension: Dimension . MLPAREN Exp MRPAREN
   45 FuncFParamArray: INT IDENT MLPAREN MRPAREN Dimension .

    MLPAREN  shift, and go to state 61

    $default  reduce using rule 45 (FuncFParamArray)


State 155

   62 If_stmt: IF SLPAREN Cond . SRPAREN Stmt
   63        | IF SLPAREN Cond . SRPAREN Stmt ELSE Stmt

    SRPAREN  shift, and go to state 164


State 156

   92 AddExp: AddExp . PLUS MulExp
   93       | AddExp . MINUS MulExp
   94 RelExp: AddExp .

    PLUS   shift, and go to state 80
    MINUS  shift, and go to state 81

    $default  reduce using rule 94 (RelExp)


State 157

   95 RelExp: RelExp . LT AddExp
   96       | RelExp . GT AddExp
   97       | RelExp . LTE AddExp
   98       | RelExp . GTE AddExp
   99 EqExp: RelExp .

    LT   shift, and go to state 165
    GT   shift, and go to state 166
    LTE  shift, and go to state 167
    GTE  shift, and go to state 168

    $default  reduce using rule 99 (EqExp)


State 158

  100 EqExp: EqExp . EQ RelExp
  101      | EqExp . NEQ RelExp
  102 LAndExp: EqExp .

    EQ   shift, and go to state 169
    NEQ  shift, and go to state 170

    $default  reduce using rule 102 (LAndExp)


State 159

  103 LAndExp: LAndExp . AND EqExp
  104 LOrExp: LAndExp .

    AND  shift, and go to state 171

    $default  reduce using rule 104 (LOrExp)


State 160

   70 Cond: LOrExp .
  105 LOrExp: LOrExp . OR LAndExp

    OR  shift, and go to state 172

    $default  reduce using rule 70 (Cond)


State 161

   64 While_stmt: WHILE SLPAREN Cond . SRPAREN Stmt

    SRPAREN  shift, and go to state 173


State 162

   68 Return_stmt: RETURN Exp SEMI .

    $default  reduce using rule 68 (Return_stmt)


State 163

   59 Assign_stmt: LVal EQ Exp . SEMI

    SEMI  shift, and go to state 174


State 164

   62 If_stmt: IF SLPAREN Cond SRPAREN . Stmt
   63        | IF SLPAREN Cond SRPAREN . Stmt ELSE Stmt

    IF        shift, and go to state 110
    WHILE     shift, and go to state 111
    BREAK     shift, and go to state 112
    CONTINUE  shift, and go to state 113
    RETURN    shift, and go to state 114
    ID        shift, and go to state 11
    DEC_NUM   shift, and go to state 35
    OCT_NUM   shift, and go to state 36
    HEX_NUM   shift, and go to state 37
    SEMI      shift, and go to state 116
    LLPAREN   shift, and go to state 85
    SLPAREN   shift, and go to state 38
    NOT       shift, and go to state 39
    PLUS      shift, and go to state 40
    MINUS     shift, and go to state 41

    EMPTY        go to state 86
    Block        go to state 118
    Stmt         go to state 175
    Assign_stmt  go to state 122
    Exp_stmt     go to state 123
    If_stmt      go to state 124
    While_stmt   go to state 125
    Cond_stmt    go to state 126
    Return_stmt  go to state 127
    Exp          go to state 128
    LVal         go to state 129
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 47
    AddExp       go to state 48
    IDENT        go to state 49


State 165

   95 RelExp: RelExp LT . AddExp

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 47
    AddExp       go to state 176
    IDENT        go to state 49


State 166

   96 RelExp: RelExp GT . AddExp

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 47
    AddExp       go to state 177
    IDENT        go to state 49


State 167

   97 RelExp: RelExp LTE . AddExp

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 47
    AddExp       go to state 178
    IDENT        go to state 49


State 168

   98 RelExp: RelExp GTE . AddExp

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 47
    AddExp       go to state 179
    IDENT        go to state 49


State 169

  100 EqExp: EqExp EQ . RelExp

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 47
    AddExp       go to state 156
    RelExp       go to state 180
    IDENT        go to state 49


State 170

  101 EqExp: EqExp NEQ . RelExp

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 47
    AddExp       go to state 156
    RelExp       go to state 181
    IDENT        go to state 49


State 171

  103 LAndExp: LAndExp AND . EqExp

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 47
    AddExp       go to state 156
    RelExp       go to state 157
    EqExp        go to state 182
    IDENT        go to state 49


State 172

  105 LOrExp: LOrExp OR . LAndExp

    ID       shift, and go to state 11
    DEC_NUM  shift, and go to state 35
    OCT_NUM  shift, and go to state 36
    HEX_NUM  shift, and go to state 37
    SLPAREN  shift, and go to state 38
    NOT      shift, and go to state 39
    PLUS     shift, and go to state 40
    MINUS    shift, and go to state 41

    LVal         go to state 43
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 47
    AddExp       go to state 156
    RelExp       go to state 157
    EqExp        go to state 158
    LAndExp      go to state 183
    IDENT        go to state 49


State 173

   64 While_stmt: WHILE SLPAREN Cond SRPAREN . Stmt

    IF        shift, and go to state 110
    WHILE     shift, and go to state 111
    BREAK     shift, and go to state 112
    CONTINUE  shift, and go to state 113
    RETURN    shift, and go to state 114
    ID        shift, and go to state 11
    DEC_NUM   shift, and go to state 35
    OCT_NUM   shift, and go to state 36
    HEX_NUM   shift, and go to state 37
    SEMI      shift, and go to state 116
    LLPAREN   shift, and go to state 85
    SLPAREN   shift, and go to state 38
    NOT       shift, and go to state 39
    PLUS      shift, and go to state 40
    MINUS     shift, and go to state 41

    EMPTY        go to state 86
    Block        go to state 118
    Stmt         go to state 184
    Assign_stmt  go to state 122
    Exp_stmt     go to state 123
    If_stmt      go to state 124
    While_stmt   go to state 125
    Cond_stmt    go to state 126
    Return_stmt  go to state 127
    Exp          go to state 128
    LVal         go to state 129
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 47
    AddExp       go to state 48
    IDENT        go to state 49


State 174

   59 Assign_stmt: LVal EQ Exp SEMI .

    $default  reduce using rule 59 (Assign_stmt)


State 175

   62 If_stmt: IF SLPAREN Cond SRPAREN Stmt .
   63        | IF SLPAREN Cond SRPAREN Stmt . ELSE Stmt

    ELSE  shift, and go to state 185

    ELSE      [reduce using rule 62 (If_stmt)]
    $default  reduce using rule 62 (If_stmt)


State 176

   92 AddExp: AddExp . PLUS MulExp
   93       | AddExp . MINUS MulExp
   95 RelExp: RelExp LT AddExp .

    PLUS   shift, and go to state 80
    MINUS  shift, and go to state 81

    $default  reduce using rule 95 (RelExp)


State 177

   92 AddExp: AddExp . PLUS MulExp
   93       | AddExp . MINUS MulExp
   96 RelExp: RelExp GT AddExp .

    PLUS   shift, and go to state 80
    MINUS  shift, and go to state 81

    $default  reduce using rule 96 (RelExp)


State 178

   92 AddExp: AddExp . PLUS MulExp
   93       | AddExp . MINUS MulExp
   97 RelExp: RelExp LTE AddExp .

    PLUS   shift, and go to state 80
    MINUS  shift, and go to state 81

    $default  reduce using rule 97 (RelExp)


State 179

   92 AddExp: AddExp . PLUS MulExp
   93       | AddExp . MINUS MulExp
   98 RelExp: RelExp GTE AddExp .

    PLUS   shift, and go to state 80
    MINUS  shift, and go to state 81

    $default  reduce using rule 98 (RelExp)


State 180

   95 RelExp: RelExp . LT AddExp
   96       | RelExp . GT AddExp
   97       | RelExp . LTE AddExp
   98       | RelExp . GTE AddExp
  100 EqExp: EqExp EQ RelExp .

    LT   shift, and go to state 165
    GT   shift, and go to state 166
    LTE  shift, and go to state 167
    GTE  shift, and go to state 168

    $default  reduce using rule 100 (EqExp)


State 181

   95 RelExp: RelExp . LT AddExp
   96       | RelExp . GT AddExp
   97       | RelExp . LTE AddExp
   98       | RelExp . GTE AddExp
  101 EqExp: EqExp NEQ RelExp .

    LT   shift, and go to state 165
    GT   shift, and go to state 166
    LTE  shift, and go to state 167
    GTE  shift, and go to state 168

    $default  reduce using rule 101 (EqExp)


State 182

  100 EqExp: EqExp . EQ RelExp
  101      | EqExp . NEQ RelExp
  103 LAndExp: LAndExp AND EqExp .

    EQ   shift, and go to state 169
    NEQ  shift, and go to state 170

    $default  reduce using rule 103 (LAndExp)


State 183

  103 LAndExp: LAndExp . AND EqExp
  105 LOrExp: LOrExp OR LAndExp .

    AND  shift, and go to state 171

    $default  reduce using rule 105 (LOrExp)


State 184

   64 While_stmt: WHILE SLPAREN Cond SRPAREN Stmt .

    $default  reduce using rule 64 (While_stmt)


State 185

   63 If_stmt: IF SLPAREN Cond SRPAREN Stmt ELSE . Stmt

    IF        shift, and go to state 110
    WHILE     shift, and go to state 111
    BREAK     shift, and go to state 112
    CONTINUE  shift, and go to state 113
    RETURN    shift, and go to state 114
    ID        shift, and go to state 11
    DEC_NUM   shift, and go to state 35
    OCT_NUM   shift, and go to state 36
    HEX_NUM   shift, and go to state 37
    SEMI      shift, and go to state 116
    LLPAREN   shift, and go to state 85
    SLPAREN   shift, and go to state 38
    NOT       shift, and go to state 39
    PLUS      shift, and go to state 40
    MINUS     shift, and go to state 41

    EMPTY        go to state 86
    Block        go to state 118
    Stmt         go to state 186
    Assign_stmt  go to state 122
    Exp_stmt     go to state 123
    If_stmt      go to state 124
    While_stmt   go to state 125
    Cond_stmt    go to state 126
    Return_stmt  go to state 127
    Exp          go to state 128
    LVal         go to state 129
    PrimaryExp   go to state 44
    UnaryExp     go to state 45
    FuncCallExp  go to state 46
    MulExp       go to state 47
    AddExp       go to state 48
    IDENT        go to state 49


State 186

   63 If_stmt: IF SLPAREN Cond SRPAREN Stmt ELSE Stmt .

    $default  reduce using rule 63 (If_stmt)
